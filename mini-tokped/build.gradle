apply plugin: 'com.android.application'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        mavenCentral()
        jcenter()
        maven { url 'https://hansel.io/maven' }
        maven {
            url 'https://jitpack.io'
        }
    }
}

android {
    
    packagingOptions {
        exclude 'META-INF/**'
        pickFirst '**/armeabi-v7a/libc++_shared.so'
        pickFirst '**/x86/libc++_shared.so'
        pickFirst '**/arm64-v8a/libc++_shared.so'
        pickFirst '**/x86_64/libc++_shared.so'
        pickFirst '**/x86/libjsc.so'
        pickFirst '**/armeabi-v7a/libjsc.so'
    }

    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['assets', 'src/main/assets', 'src/main/assets/']
            jniLibs.srcDirs = ["jniLibs"]
        }
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
//            buildConfigField "boolean", "ENABLE_DISTRIBUTION", allowDistribution()
            proguardFiles 'proguard-rules.txt'
            buildConfigField "boolean", "IS_PREINSTALL", "false"
            buildConfigField "String", "PREINSTALL_NAME", "\"\""
            buildConfigField "String", "PREINSTALL_DESC", "\"\""
            buildConfigField "String", "PREINSTALL_SITE", "\"\""
        }
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        multiDexEnabled = true
        applicationId "com.uber.tkpd"
        versionCode 350000000
        versionName "3.50"
//        vectorDrawables.useSupportLibrary = vectorDrawable
        resConfigs "en", "id"
//        ndk {
//            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
//        }
    }

    dexOptions {
        javaMaxHeapSize "8g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
//        resolutionStrategy.force 'androidx.multidex:multidex:2.0.0'
//        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
//        resolutionStrategy.force 'com.squareup.okio:okio:2.2.2'
//        resolutionStrategy.force 'com.facebook.soloader:soloader:0.8.0'
    }

    // Specifies 4 flavor dimensions.
    flavorDimensions "tier", "client"

    productFlavors {
        live {
            dimension "tier"
        }
        staging {
            dimension "tier"
        }
        dev {
            dimension "client"
        }
        prod {
            dimension "client"
        }
    }
//
//    // put Dynamic Feature Modules in dynamic-feature-customerapp.cfg
//    // to disable dynamic feature, use command option -Pdisable-dynamic-feature
//    dynamicFeatures = getDynamicFeatureIfEnabled(project)
//    generateAssetFile(project, dynamicFeatures)
}



dependencies {
    implementation "androidx.multidex:multidex:2.0.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.21"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.21"
    implementation "androidx.legacy:legacy-support-v13:1.0.0"
    implementation "com.google.android.material:material:1.0.0"
}
